version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - django-elk-network
    healthcheck:
      test: [ "CMD", "curl", "-u", "elastic:${ELASTIC_PASSWORD}", "-f", "http://elasticsearch:9200/_cluster/health?wait_for_status=yellow&timeout=5s" ]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.10
    container_name: logstash

    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logs:/app/logs
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.monitoring.enabled=false
    ports:
      - "5044:5044"
      - "9600:9600"
    networks:
      - django-elk-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.10
    container_name: kibana
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
    ports:
      - "5601:5601"
    networks:
      - django-elk-network
    healthcheck:
      test: [ "CMD", "curl", "-u", "elastic:${ELASTIC_PASSWORD}", "-f", "http://kibana:5601/api/status" ]
      interval: 10s
      retries: 5
      start_period: 20s
      timeout: 5s


  apm-server:
    image: docker.elastic.co/apm/apm-server:7.17.10
    container_name: apm-server
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./apm-server.yml:/usr/share/apm-server/apm-server.yml
    command: >
      apm-server -e
        -E apm-server.secret_token=${APM_SECRET_TOKEN}
        -E apm-server.kibana.enabled=true
        -E apm-server.kibana.host=${APM_KIBANA_HOST}
        -E apm-server.kibana.username="apm_server_user"
        -E apm-server.kibana.password=${APM_SERVER_PASSWORD}
        -E output.elasticsearch.hosts=["${APM_ELASTICSEARCH_HOST}"]
        -E output.elasticsearch.username="apm_server_user"
        -E output.elasticsearch.password=${APM_SERVER_PASSWORD}
    ports:
      - "8200:8200"
    networks:
      - django-elk-network

#  apm-server:
#    image: docker.elastic.co/apm/apm-server:7.17.10
#    container_name: apm-server
#    depends_on:
#      elasticsearch:
#        condition: service_healthy
#      kibana:
#        condition: service_healthy
#    volumes:
#      - ./apm-server.yml:/usr/share/apm-server/apm-server.yml
#    command: [ "apm-server", "-e", "--strict.perms=false" ]
#    ports:
#      - "8200:8200"
#    networks:
#      - django-elk-network

networks:
  django-elk-network:
    external: true

volumes:
  elasticsearch-data: